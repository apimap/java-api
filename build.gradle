plugins {
    id 'java'
    id 'jacoco'
    id 'org.springframework.boot' version "2.7.1"
    id 'maven-publish'
    id "com.github.johnrengelman.processes" version "0.5.0"
    id "org.springdoc.openapi-gradle-plugin" version "1.3.3"
}

group = 'io.apimap.api'
sourceCompatibility = 13.0

processResources {
    expand(project.properties)
}

repositories {
    maven {
        url = uri("https://maven.pkg.github.com/apimap/java-rest-interface")
        credentials {
            username = project.findProperty("gpr.user") ?: System.getenv("MULTI_PACKAGES_USER")
            password = project.findProperty("gpr.key") ?: System.getenv("MULTI_PACKAGES_TOKEN")
        }
    }
    mavenCentral()
}

tasks.withType( JavaCompile ).configureEach {
    options.forkOptions.jvmArgs.addAll( ['--add-opens', 'jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED'] )
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-webflux:2.7.1'
    implementation 'org.springframework.boot:spring-boot-starter-jetty:2.7.1'
    implementation 'org.springframework.boot:spring-boot-starter-actuator:2.7.1'
    implementation 'org.springframework.boot:spring-boot-starter-security:2.7.1'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive:2.7.1'

    implementation 'org.springdoc:springdoc-openapi-webflux-ui:1.6.9'

    implementation 'io.netty:netty-buffer:4.1.79.Final'
    implementation 'org.dizitart:nitrite:3.4.4'
    implementation 'org.commonmark:commonmark:0.19.0'
    implementation 'io.apimap.api:rest-interface:2.2.0'

    implementation 'io.micrometer:micrometer-core:1.9.2'

    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.7.1'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'
}

jacoco {
    toolVersion = "0.8.8"
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}

bootRun {
    if (project.hasProperty('args')) {
        args project.args.split(',')
    }
}

jar{
    archiveName 'api.jar'
}

test {
    useJUnitPlatform()
}

openApi {
    apiDocsUrl.set("http://localhost:8080/documentation/openapi3")
    outputDir.set(file("$projectDir/"))
    outputFileName.set("swagger.json")
    waitTimeInSeconds.set(10)
    forkProperties.set("-Dspring.profiles.active=swaggermock")
}